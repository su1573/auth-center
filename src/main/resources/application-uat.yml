server: 
  port: 2222
logging:
  level:
    root: 
    com.chinare.auth.dao: debug
  logstashIp: 172.25.147.128
  logstashPort: 5044
spring:
  sleuth:
    sampler:
      probability: 1.0
  rabbitmq:
    addresses: 172.25.147.123:5672
    host: 172.25.147.123
    port: 5672
    password: admin
    username: admin
    virtual-host: /dev
    use-ssl: false
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    driverClassName: com.mysql.jdbc.Driver
    url: jdbc:mysql://172.25.147.148:3306/chinare-base?useUnicode=true&characterEncoding=utf8
    username: crudp
    password: abcd1234
    initialSize: 1
    minIdle: 3
    maxActive: 20
    # 配置获取连接等待超时的时间
    maxWait: 60000
    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
    timeBetweenEvictionRunsMillis: 60000
    # 配置一个连接在池中最小生存的时间，单位是毫秒
    minEvictableIdleTimeMillis: 30000
    validationQuery: select 'x'
    testWhileIdle: true
    testOnBorrow: false
    testOnReturn: false
    # 打开PSCache，并且指定每个连接上PSCache的大小
    poolPreparedStatements: true
    maxPoolPreparedStatementPerConnectionSize: 20
    # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
    filters: stat,wall,slf4j
    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
    # 合并多个DruidDataSource的监控数据
    #useGlobalDataSourceStat: true
  redis:
    host: 172.25.147.144
    port: 6379
    password:
    # 连接超时时间（毫秒）
    timeout: 10000
    jedis:
      pool:
        # 连接池中的最大空闲连接
        max-idle: 8
        # 连接池中的最小空闲连接
        min-idle: 10
        # 连接池最大连接数（使用负值表示没有限制）
        max-active: 100
        # 连接池最大阻塞等待时间（使用负值表示没有限制）
        max-wait: -1
management:
  metrics:
    export:
      prometheus:
        step: 30s
        enabled: true
        descriptions: true
    tags:
      application: ${spring.application.name}
  endpoints:
    web:
      exposure:
        include: '*'